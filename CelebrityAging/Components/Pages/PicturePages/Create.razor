@page "/pictures/create"
@using Microsoft.EntityFrameworkCore
@using Core.Entities
@inject IDbContextFactory<Persistance.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Picture</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Picture" OnValidSubmit="AddPicture" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="captureddate" class="form-label">CapturedDate:</label> 
                <InputDate id="captureddate" @bind-Value="Picture.CapturedDate" class="form-control" /> 
                <ValidationMessage For="() => Picture.CapturedDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="personid" class="form-label">PersonId:</label> 
                <InputText id="personid" @bind-Value="Picture.PersonId" class="form-control" /> 
                <ValidationMessage For="() => Picture.PersonId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="link" class="form-label">Link:</label> 
                <InputText id="link" @bind-Value="Picture.Link" class="form-control" /> 
                <ValidationMessage For="() => Picture.Link" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/pictures">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Picture Picture { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddPicture()
    {
        using var context = DbFactory.CreateDbContext();
        context.picture.Add(Picture);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/pictures");
    }
}
